/*
 * generated by Xtext
 */
grammar InternalEinKauflist;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.assignment1.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.assignment1.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.assignment1.services.EinKauflistGrammarAccess;

}

@parser::members {
 
 	private EinKauflistGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EinKauflistGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleBuyticket
entryRuleBuyticket 
:
{ before(grammarAccess.getBuyticketRule()); }
	 ruleBuyticket
{ after(grammarAccess.getBuyticketRule()); } 
	 EOF 
;

// Rule Buyticket
ruleBuyticket
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuyticketAccess().getGroup()); }
(rule__Buyticket__Group__0)
{ after(grammarAccess.getBuyticketAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCategory
entryRuleCategory 
:
{ before(grammarAccess.getCategoryRule()); }
	 ruleCategory
{ after(grammarAccess.getCategoryRule()); } 
	 EOF 
;

// Rule Category
ruleCategory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCategoryAccess().getGroup()); }
(rule__Category__Group__0)
{ after(grammarAccess.getCategoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItem
entryRuleItem 
:
{ before(grammarAccess.getItemRule()); }
	 ruleItem
{ after(grammarAccess.getItemRule()); } 
	 EOF 
;

// Rule Item
ruleItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemAccess().getGroup()); }
(rule__Item__Group__0)
{ after(grammarAccess.getItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Buyticket__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Buyticket__Group__0__Impl
	rule__Buyticket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Buyticket__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuyticketAccess().getBuyticketAction_0()); }
(

)
{ after(grammarAccess.getBuyticketAccess().getBuyticketAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Buyticket__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Buyticket__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Buyticket__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuyticketAccess().getCategoryAssignment_1()); }
(rule__Buyticket__CategoryAssignment_1)*
{ after(grammarAccess.getBuyticketAccess().getCategoryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Category__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group__0__Impl
	rule__Category__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getCategoryKeyword_0()); }

	'category' 

{ after(grammarAccess.getCategoryAccess().getCategoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group__1__Impl
	rule__Category__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getCategoryNameAssignment_1()); }
(rule__Category__CategoryNameAssignment_1)
{ after(grammarAccess.getCategoryAccess().getCategoryNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group__2__Impl
	rule__Category__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getGroup_2()); }
(rule__Category__Group_2__0)*
{ after(grammarAccess.getCategoryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getCategoryAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Category__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_2__0__Impl
	rule__Category__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getHyphenMinusKeyword_2_0()); }

	'-' 

{ after(grammarAccess.getCategoryAccess().getHyphenMinusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getItemsAssignment_2_1()); }
(rule__Category__ItemsAssignment_2_1)
{ after(grammarAccess.getCategoryAccess().getItemsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Item__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Item__Group__0__Impl
	rule__Item__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Item__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAccess().getItemNameAssignment_0()); }
(rule__Item__ItemNameAssignment_0)
{ after(grammarAccess.getItemAccess().getItemNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Item__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Item__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Item__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAccess().getPriceAssignment_1()); }
(rule__Item__PriceAssignment_1)
{ after(grammarAccess.getItemAccess().getPriceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Buyticket__CategoryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuyticketAccess().getCategoryCategoryParserRuleCall_1_0()); }
	ruleCategory{ after(grammarAccess.getBuyticketAccess().getCategoryCategoryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Category__CategoryNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getCategoryNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCategoryAccess().getCategoryNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Category__ItemsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getItemsItemParserRuleCall_2_1_0()); }
	ruleItem{ after(grammarAccess.getCategoryAccess().getItemsItemParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Item__ItemNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAccess().getItemNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getItemAccess().getItemNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Item__PriceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAccess().getPriceINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getItemAccess().getPriceINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


